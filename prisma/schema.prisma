// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customers {
  id                Int                 @id @default(autoincrement())
  username          String
  email             String              @unique
  password          String?
  phone             String?
  address           String?
  city              String?
  state             String?
  zipCode           String?
  province          String?
  isActive          Boolean             @default(true)
  isVerified        Boolean             @default(false)
  lastLogin         DateTime?
  profilePicture    String?
  HistoryCalculator HistoryCalculator[]

  organizationId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  org_adminOf  Organization[] @relation("OrganizationAdmins")
  org_memberOf Organization[] @relation("OrganizationMembers")

  @@map("customers")
}

model HistoryCalculator {
  id          Int    @id @default(autoincrement())
  customerId  Int
  calculation String
  result      Float

  customer Customers @relation(fields: [customerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("history_calculator")
}

model Organization {
  id           Int         @id @default(autoincrement())
  org_name     String
  org_email    String      @unique
  org_phone    String?
  org_address  String?
  org_city     String?
  org_state    String?
  org_zipCode  String?
  org_province String?
  org_logo     String?
  org_password String?
  org_admins   Customers[] @relation("OrganizationAdmins")
  org_members  Customers[] @relation("OrganizationMembers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("organizations")
}

model CarBrands {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  country     String?
  description String?

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  CarModels CarModels[]

  @@map("car_brands")
}

model CarModels {
  id          Int     @id @default(autoincrement())
  brandId     Int
  name        String
  description String?

  power_type               String?
  oil_type                 CarOilTypes[]
  oil_carbon_per_unit      Float?        @default(0.0)
  electric_carbon_per_unit Float?        @default(0.0)

  brand            CarBrands @relation(fields: [brandId], references: [id])
  cubic_centimeter Int?      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("car_models")
}

model MotorcycleBrands {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  country     String?
  description String?

  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  MotorcycleModels MotorcycleModels[]

  @@map("motorcycle_brands")
}

model MotorcycleModels {
  id               Int              @id @default(autoincrement())
  brandId          Int
  name             String
  description      String?
  brand            MotorcycleBrands @relation(fields: [brandId], references: [id])
  cubic_centimeter Int?             @default(0)

  power_type               String?
  electric_carbon_per_unit Float?              @default(0.0)
  oil_carbon_per_unit      Float?              @default(0.0)
  oil_type                 MotorBikeOilTypes[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("motorcycle_models")
}

model PublicTransportTypes {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  description   String?
  carbon_per_km Float         @default(0.0)
  power_type    String?
  oil_type      CarOilTypes[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("public_transport_types")
}

model AirBrands {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  country     String?
  description String?

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  AirModels AirModels[]

  @@map("air_brands")
}

model AirModels {
  id          Int     @id @default(autoincrement())
  brandId     Int
  name        String
  description String?

  oil_type            AirOilTypes?
  oil_carbon_per_unit Float?       @default(0.0)

  brand AirBrands @relation(fields: [brandId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("air_models")
}

enum AirOilTypes {
  JET
  SAF
  AVGAS_100
}

// Diesel 91', 'Diesel 95', 'Diesel 97', 'ALPHA-X', 'E20', 'E85', 'B5PLUS
enum CarOilTypes {
  DIESEL_91
  DIESEL_95
  DIESEL_97
  ALPHA_X
  E20
  E85
  B5PLUS
}

// Bensin 91', 'Bensin 95', 'Gasohol 95', 'Gasohol 91', 'Gasohol 97', 'Gasohol E20', 'Gasohol E85
enum MotorBikeOilTypes {
  GASOHOL_95
  GASOHOL_91
  GASOHOL_97
  GASOHOL_E20
  GASOHOL_E85
}
